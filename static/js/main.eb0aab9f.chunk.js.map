{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","items","removeItem","editItem","className","map","item","id","title","key","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","filter","specificItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb0aab9f.chunk.js","sourcesContent":["import React from 'react'\nimport { FaEdit, FaTrash } from 'react-icons/fa'\nconst List = ({items, removeItem, editItem}) => {\n return (\n  <div className='grocery-list'>\n     {items.map((item) => {\n        const {id, title} = item;\n       return (\n         <article key={id} className='grocery-item'>\n           <p className='title'>{title}</p>\n           <div className='btn-container'>\n           <button type='button' className='edit-btn' onClick={()=> editItem(id)}>\n           <FaEdit/>\n           </button>\n           <button type='button' className='delete-btn' onClick={() => removeItem(id)}>\n            <FaTrash/>\n           </button>\n           </div>\n         </article>\n      );\n    })}\n  </div>\n  );\n};\n\nexport default List;\n","import React, { useEffect } from 'react'\n\n const Alert = ({type, msg, removeAlert, list}) => {\n  useEffect(()=>{\n    const timeout = setTimeout(()=>{\n       removeAlert()\n  }, 3000)\n  return() => clearTimeout(timeout)\n}, [list])\n  return <p className={`alert alert-${type}`}>{msg}</p>\n}\n\nexport default Alert\n","import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\n\nconst getLocalStorage = ()=>{\n  let list = localStorage.getItem('list');\n  if (list){\n    return JSON.parse(localStorage.getItem('list'))\n  }\n  else{\n    return []\n  }\n}\n\nfunction App() {\n     \n    const [name, setName] = useState('')\n    const [list, setList] = useState(getLocalStorage())\n    const [isEditing, setIsEditing] = useState(false)\n    const [editID, setEditID] = useState(null)\n    const [alert, setAlert] = useState({show: false, msg:'', type: ''})\n\n  //dato che ho messo onSubmit sul form, non avrò busogno della onClick function sul bottone(che comunque è un'alternativa)\n    const handleSumbit = (e) =>{\n      e.preventDefault();\n      //check if there is a value to submit or not, if not...display alert\n      if(!name){\n        setAlert({show: true, msg:'Please enter value', type:'danger'})\n      }\n      else if(name && isEditing){\n        //deal with edit\n        setList(\n          list.map((item)=>{\n            if(item.id === editID){\n            return {...item, title: name}\n          }\n            return item\n        })\n      )\n    \n    setName('');\n    setEditID(null);\n    setIsEditing(false);\n    setAlert(true, 'Item changed', 'success');\n   }\n      else{\n        //show alert\n        const newItem = {id: new Date().getTime().toString(), title: name};\n        setList([...list, newItem]);\n        setAlert({show:true, msg:'Item entered', type:'success'})\n        setName('')\n      }\n    }\n\n\n  const clearAll = ()=>{\n      setAlert({show: true, msg: 'Empty list', type: 'danger'})\n      setList([]);\n    }\n\n  const removeItem = (id)=>{\n     setAlert({show: true, msg:'Item removed', type:'danger'})\n     setList(list.filter((item)=>item.id !== id))\n  }\n\n  const editItem = (id)=>{\n    const specificItem = list.find((item)=> item.id === id);\n    setIsEditing(true);\n    setEditID(id)\n    setName(specificItem.title)\n  }\n  useEffect(()=>{\n    localStorage.setItem('list', JSON.stringify(list))\n  }, [list])\n  return( \n  <section className='section-center'>\n    <form className='grocery-form' onSubmit={handleSumbit}>\n      {alert && <Alert {...alert} removeAlert={setAlert}\n    removeAlert={setAlert} list={list}/>} \n      <h3>Grocery Bud</h3>\n      <div className='form-control'>\n        <input type='text' className='grocery' placeholder='e.g. eggs' value={name} onChange={(e)=>setName(e.target.value)} ></input>\n        <button type='submit' className='submit-btn'>\n          {isEditing? 'edit': 'submit'}\n        </button>\n      </div>\n    </form>\n    {list.length > 0 && ( //qui stiamo dicendo che, solo se sta qualcosa nella lista ci deve mostrare la lista\n    <div className='grocery-container'>\n    <List items={list} removeItem={removeItem} editItem={editItem}/>\n    <button className='clear-btn' onClick={clearAll}>\n      Clear items\n    </button>\n    </div>\n    )}\n    </section>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}